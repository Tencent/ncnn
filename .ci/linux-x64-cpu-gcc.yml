name: linux-x64-cpu-gcc
on:
  push:
    branches: [master]
    paths:
    - '.ci/linux-x64-cpu-gcc.yml'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
    - 'tools/**'
    - '!tools/pnnx/**'
    - 'examples/**'
  mr:
    target-branches: [master]
    paths:
    - '.ci/linux-x64-cpu-gcc.yml'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
    - 'tools/**'
    - '!tools/pnnx/**'
    - 'examples/**'
concurrency:
  group: linux-x64-cpu-gcc-${{ github.ref }}

jobs:
  linux-gcc:
    runs-on: docker
    steps:
    - name: checkout
      checkout: self
      with:
        enableGitLfs: false
    - name: protobuf
      run: |
        uname -a
        cat /proc/cpuinfo
        yum update
        yum install protobuf-devel protobuf-compiler opencv-devel
    - name: build-sse2
      run: |
        mkdir build-sse2 && cd build-sse2
        cmake -DNCNN_AVX=OFF -DNCNN_AVX2=OFF -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-sse2
      run: cd build-sse2 && ctest --output-on-failure -j 2
    - name: build-shared
      run: |
        mkdir build-shared && cd build-shared
        cmake -DNCNN_AVX2=ON -DNCNN_SHARED_LIB=ON ..
        cmake --build . -j 2
    - name: build-avx2
      run: |
        mkdir build-avx2 && cd build-avx2
        cmake -DNCNN_AVX2=ON -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-avx2
      run: cd build-avx2 && ctest --output-on-failure -j 2
    - name: build-avx
      run: |
        mkdir build-avx && cd build-avx
        cmake -DNCNN_AVX2=OFF -DNCNN_AVX=ON -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-avx
      run: cd build-avx && ctest --output-on-failure -j 2
    - name: build-avx1-2
      run: |
        mkdir build-avx1-2 && cd build-avx1-2
        cmake -DNCNN_AVX2=ON -DNCNN_AVX=ON -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-avx1-2
      run: cd build-avx1-2 && ctest --output-on-failure -j 2
    - name: build-noint8
      run: |
        mkdir build-noint8 && cd build-noint8
        cmake -DNCNN_INT8=OFF -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-noint8
      run: cd build-noint8 && ctest --output-on-failure -j 2
