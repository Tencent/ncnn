name: test-coverage
on:
  push:
    branches: [master]
    paths:
    - '.ci/test-coverage.yml'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/**'
    - 'tests/**'
    - 'toolchains/**'
  mr:
    target-branches: [master]
    paths:
    - '.ci/test-coverage.yml'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/**'
    - 'tests/**'
    - 'toolchains/**'
concurrency:
  group: test-coverage-${{ ci.head_ref }}

jobs:
  linux-gcc-gpu:
    runs-on:
      pool-name: docker
      container:
        image: bkci/ci:ubuntu
    steps:
    - name: checkout
      checkout: self
      with:
        enableGitLfs: false

    - name: install-deps
      run: |
        apt-get update
        apt-get install -y lcov libvulkan-dev

    - name: checkout-swiftshader
      checkout: https://github.com/google/swiftshader.git
      with:
        pullType: COMMIT_ID
        refName: 04d007924c2d33ea1ac4be78ae423507a0b08b61
        localPath: swiftshader
        enableSubmodule: false
        enableGitLfs: false
    - name: checkout-swiftshader-submodules
      run: |
        cd swiftshader
        git -c submodule."third_party/git-hooks".update=none submodule update --init --recursive

    - name: swiftshader
      run: |
        cd swiftshader
        mkdir -p build; cd build
        cmake -DCMAKE_INSTALL_PREFIX=install -DSWIFTSHADER_BUILD_PVR=FALSE -DSWIFTSHADER_BUILD_TESTS=FALSE -DSWIFTSHADER_ENABLE_ASTC=FALSE -DSWIFTSHADER_WARNINGS_AS_ERRORS=FALSE -DREACTOR_BACKEND=Subzero -DREACTOR_DEFAULT_OPT_LEVEL=Default -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j $(nproc)
        mkdir ${ci.workspace}/swiftshader-install
        cp Linux/* ${ci.workspace}/swiftshader-install

    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=debug -DNCNN_COVERAGE=ON -DNCNN_RUNTIME_CPU=OFF -DNCNN_AVX2=ON -DNCNN_AVX512=OFF -DNCNN_XOP=OFF -DNCNN_OPENMP=OFF -DNCNN_VULKAN=ON -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF -DNCNN_BUILD_TESTS=ON ..
    - name: build
      run: cmake --build build -j $(nproc)
    - name: test
      run: |
        printf "[Processor]\nThreadCount=1\n" > build/tests/SwiftShader.ini
        export VK_ICD_FILENAMES="${ci.workspace}/swiftshader-install/vk_swiftshader_icd.json"
        cd build && ctest --output-on-failure -j $(nproc)
    - name: lcov-collect
      run: |
        cd build
        lcov -d ./src -c -o lcov.info
        lcov -r lcov.info '/usr/*' -o lcov.info
        lcov -r lcov.info '*/build/*' -o lcov.info
        lcov -r lcov.info '*/glslang/*' -o lcov.info
        lcov --list lcov.info
