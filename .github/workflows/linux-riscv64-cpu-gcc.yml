name: linux-riscv64-cpu-gcc
on:
  push:
    branches: [master]
    paths:
    - '.github/workflows/linux-riscv64-cpu-gcc.yml'
    - 'toolchains/riscv64-linux-gnu.toolchain.cmake'
    - 'toolchains/riscv64-unknown-linux-gnu.toolchain.cmake'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/riscv/**'
    - 'tests/**'
  pull_request:
    branches: [master]
    paths:
    - '.github/workflows/linux-riscv64-cpu-gcc.yml'
    - 'toolchains/riscv64-linux-gnu.toolchain.cmake'
    - 'toolchains/riscv64-unknown-linux-gnu.toolchain.cmake'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/riscv/**'
    - 'tests/**'
concurrency:
  group: linux-riscv64-cpu-gcc-${{ github.ref }}
  cancel-in-progress: true
jobs:
  linux-gcc-riscv64:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: cache-qemu
      id: cache-qemu
      uses: actions/cache@v2.1.7
      with:
        path: qemu-install
        key: qemu-riscv64-install-1
    - name: checkout-qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: qemu/qemu
        path: qemu
        ref: 8746309137ba470d1b2e8f5ce86ac228625db940
    - name: qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      run: |
        cd qemu
        ./configure --prefix=install --target-list=riscv64-linux-user --disable-system
        make -j2
        make install
        cp -r riscv64-linux-user/install $GITHUB_WORKSPACE/qemu-install

    - name: riscv64-gnu-toolchain
      run: |
        sudo apt-get update
        sudo apt-get install g++-riscv64-linux-gnu

    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/riscv64-linux-gnu.toolchain.cmake -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF -DNCNN_BUILD_TESTS=ON ..
    - name: build
      run: cmake --build build -j 2

    - name: test
      run: |
        export PATH=$GITHUB_WORKSPACE/qemu-install/bin:$PATH
        cd build
        TESTS_EXECUTABLE_LOADER=qemu-riscv64 TESTS_EXECUTABLE_LOADER_ARGUMENTS="-L;/usr/riscv64-linux-gnu" ctest --output-on-failure -j 2

  linux-gcc-riscv64-rvv:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: cache-qemu
      id: cache-qemu
      uses: actions/cache@v2.1.7
      with:
        path: qemu-install
        key: qemu-riscv64-rvv-install-20210610

    - name: install-qemu-build-deps
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install autoconf automake autotools-dev ninja-build

    - name: checkout-qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: sifive/qemu
        path: qemu
        ref: 7a3e8e23b4cf1422ec48e9d4b4009337a05a635d
    - name: qemu
      if: steps.cache-qemu.outputs.cache-hit != 'true'
      run: |
        wget https://download.qemu.org/qemu-6.0.0.tar.xz
        tar -xf qemu-6.0.0.tar.xz
        cp -r qemu/fpu qemu-6.0.0/
        cp -r qemu/include/fpu qemu-6.0.0/include/
        cp -r qemu/target/riscv qemu-6.0.0/target/
        cp -r qemu/linux-user/elfload.c qemu-6.0.0/linux-user/
        cd qemu-6.0.0
        mkdir build
        cd build
        ../configure --prefix=`pwd`/install --target-list=riscv64-linux-user --disable-system
        make -j2
        make install
        cp -r install $GITHUB_WORKSPACE/qemu-install

    - name: cache-riscv
      id: cache-riscv
      uses: actions/cache@v2.1.7
      with:
        path: rv64gcv-install
        key: rv64gcv-linux-install-20210504

    - name: install-riscv-build-deps
      if: steps.cache-riscv.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev device-tree-compiler

    - name: checkout-riscv-gnu-toolchain
      if: steps.cache-riscv.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: riscv/riscv-gnu-toolchain
        path: riscv-gnu-toolchain
        ref: 28271f03bb538d926ad2889dc8ad1b0cb1b3b45c
    - name: checkout-riscv-gnu-toolchain-submodules
      if: steps.cache-riscv.outputs.cache-hit != 'true'
      run: |
        cd riscv-gnu-toolchain
        git submodule update --init --recursive --depth 1 riscv-binutils
        git submodule update --init --recursive --depth 1 riscv-gcc
        git submodule update --init --recursive --depth 1 riscv-glibc
        git submodule update --init --recursive --depth 1 riscv-dejagnu
        git submodule update --init --recursive --depth 1 riscv-newlib
        git submodule update --init --recursive --depth 1 riscv-gdb
    - name: riscv-gnu-toolchain
      if: steps.cache-riscv.outputs.cache-hit != 'true'
      run: |
        cd riscv-gnu-toolchain
        sed -i '/__OBSOLETE_MATH/d' riscv-newlib/newlib/libm/common/math_errf.c
        ./configure --prefix=$GITHUB_WORKSPACE/rv64gcv-install --with-arch=rv64gcv_zfh
        make linux

    - name: riscv-strip-install
      if: steps.cache-riscv.outputs.cache-hit != 'true'
      run: find $GITHUB_WORKSPACE/rv64gcv-install -type f | xargs -i strip -g {} || true

    - name: configure
      run: export RISCV_ROOT_PATH=$GITHUB_WORKSPACE/rv64gcv-install && mkdir build && cd build && cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/riscv64-unknown-linux-gnu.toolchain.cmake -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF -DNCNN_BUILD_TESTS=ON ..
    - name: build
      run: cmake --build build -j 2

    - name: test-vlen256
      run: |
        export PATH=$GITHUB_WORKSPACE/qemu-install/bin:$PATH
        cd build
        TESTS_EXECUTABLE_LOADER=qemu-riscv64 TESTS_EXECUTABLE_LOADER_ARGUMENTS="-cpu;rv64,x-v=true,x-Zfh=true,vlen=256,elen=64,vext_spec=v1.0;-L;$GITHUB_WORKSPACE/rv64gcv-install/sysroot" ctest --output-on-failure -j 2

    - name: test-vlen128
      run: |
        export PATH=$GITHUB_WORKSPACE/qemu-install/bin:$PATH
        cd build
        TESTS_EXECUTABLE_LOADER=qemu-riscv64 TESTS_EXECUTABLE_LOADER_ARGUMENTS="-cpu;rv64,x-v=true,x-Zfh=true,vlen=128,elen=64,vext_spec=v1.0;-L;$GITHUB_WORKSPACE/rv64gcv-install/sysroot" ctest --output-on-failure -j 2
