name: web-assembly
on:
  push:
    branches: [master]
    paths:
    - '.github/workflows/web-assembly.yml'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
  pull_request:
    branches: [master]
    paths:
    - '.github/workflows/web-assembly.yml'
    - 'CMakeLists.txt'
    - 'cmake/**'
    - 'src/*'
    - 'src/layer/*'
    - 'src/layer/x86/**'
    - 'tests/**'
concurrency:
  group: web-assembly-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read

jobs:
  webassembly:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: emsdk
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install 2.0.8
        ./emsdk activate 2.0.8
    - name: Clone protobuf
      uses: actions/checkout@v3
      with:
        repository: protocolbuffers/protobuf
        ref: v3.11.4
        submodules: recursive
        path: protobuf
    - name: Build protobuf for tools
      run: |
        cd protobuf
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release ../cmake
        cmake --build . -j 2
        cmake -DCMAKE_INSTALL_PREFIX=install -P cmake_install.cmake
        cd .. && mkdir build-wasm-lib && cd build-wasm-lib
        source ../../emsdk/emsdk_env.sh
        cmake -DCMAKE_TOOLCHAIN_FILE=../../emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -Dprotobuf_BUILD_PROTOC_BINARIES=OFF -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=Release ../cmake
        cmake --build . -j 2
        cp libprotobuf.a libprotobuf-lite.a ../build/install/lib/
    - name: Build tools
      run: |
        source emsdk/emsdk_env.sh
        mkdir build-tools && cd build-tools
        cmake -DCMAKE_TOOLCHAIN_FILE=../emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DNCNN_SSE2=OFF -DNCNN_BUILD_TOOLS=ON -DCMAKE_FIND_ROOT_PATH=$GITHUB_WORKSPACE/protobuf/build/install -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/protobuf/build/install -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j 2
    - name: Upload tools
      uses: actions/upload-artifact@v3
      with:
        path: |
          build-tools/tools/**/*.wasm
          build-tools/tools/**/*.js
    - name: build-basic
      run: |
        source emsdk/emsdk_env.sh
        mkdir build-basic && cd build-basic
        cmake -DCMAKE_TOOLCHAIN_FILE=../emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DNCNN_THREADS=OFF -DNCNN_OPENMP=OFF -DNCNN_SIMPLEOMP=OFF -DNCNN_SIMPLEOCV=ON -DNCNN_RUNTIME_CPU=OFF -DNCNN_SSE2=OFF -DNCNN_AVX2=OFF -DNCNN_AVX=OFF -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-basic
      run: |
        cd build-basic
        TESTS_EXECUTABLE_LOADER=node ctest --output-on-failure -j 2
    - name: build-simd
      run: |
        source emsdk/emsdk_env.sh
        mkdir build-simd && cd build-simd
        cmake -DCMAKE_TOOLCHAIN_FILE=../emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DNCNN_THREADS=OFF -DNCNN_OPENMP=OFF -DNCNN_SIMPLEOMP=OFF -DNCNN_SIMPLEOCV=ON -DNCNN_RUNTIME_CPU=OFF -DNCNN_SSE2=ON -DNCNN_AVX2=OFF -DNCNN_AVX=OFF -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-simd
      run: |
        cd build-simd
        TESTS_EXECUTABLE_LOADER=node TESTS_EXECUTABLE_LOADER_ARGUMENTS="--experimental-wasm-simd" ctest --output-on-failure -j 2
    - name: build-simd-omp
      run: |
        source emsdk/emsdk_env.sh
        mkdir build-simd-omp && cd build-simd-omp
        cmake -DCMAKE_TOOLCHAIN_FILE=../emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake -DNCNN_THREADS=ON -DNCNN_OPENMP=ON -DNCNN_SIMPLEOMP=ON -DNCNN_SIMPLEOCV=ON -DNCNN_RUNTIME_CPU=OFF -DNCNN_SSE2=ON -DNCNN_AVX2=OFF -DNCNN_AVX=OFF -DNCNN_BUILD_TESTS=ON ..
        cmake --build . -j 2
    - name: test-simd-omp
      run: |
        cd build-simd-omp
        TESTS_EXECUTABLE_LOADER=node TESTS_EXECUTABLE_LOADER_ARGUMENTS="--experimental-wasm-simd;--experimental-wasm-threads" ctest --output-on-failure -j 2
