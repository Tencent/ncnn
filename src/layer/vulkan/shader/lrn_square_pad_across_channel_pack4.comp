// Copyright 2019 Tencent
// SPDX-License-Identifier: BSD-3-Clause

#version 450

layout (constant_id = 0) const int region_type = 0;
layout (constant_id = 1) const int pad_head = 0;
layout (constant_id = 2) const int pad_tail = 0;

#define shape_constant_id_offset 3
layout (constant_id = shape_constant_id_offset + 0) const int dims = 0;
layout (constant_id = shape_constant_id_offset + 1) const int w = 0;
layout (constant_id = shape_constant_id_offset + 2) const int h = 0;
layout (constant_id = shape_constant_id_offset + 3) const int c = 0;
layout (constant_id = shape_constant_id_offset + 4) const int cstep = 0;

layout (constant_id = shape_constant_id_offset + 5) const int outdims = 0;
layout (constant_id = shape_constant_id_offset + 6) const int outw = 0;
layout (constant_id = shape_constant_id_offset + 7) const int outh = 0;
layout (constant_id = shape_constant_id_offset + 8) const int outc = 0;
layout (constant_id = shape_constant_id_offset + 9) const int outcstep = 0;

layout (binding = 0) readonly buffer bottom_blob { sfpvec4 bottom_blob_data[]; };
layout (binding = 1) writeonly buffer square_workspace { float square_workspace_data[]; };

layout (push_constant) uniform parameter
{
    int dims;
    int w;
    int h;
    int c;
    int cstep;

    int outdims;
    int outw;
    int outh;
    int outc;
    int outcstep;
} p;

void main()
{
    int gx = int(gl_GlobalInvocationID.x);
    int gy = int(gl_GlobalInvocationID.y);
    int gz = int(gl_GlobalInvocationID.z);

    if (gx >= psc(outw) || gy >= psc(outh) || gz >= psc(outc))
        return;

    // support region_type == 0 only

    afp res;

    int z = int(floor(afp(gz - pad_head) / 4.f));

    if (z >= 0 && z < psc(c))
    {
        int v_offset = z * psc(cstep) + gy * psc(w) + gx;
        afpvec4 v4 = buffer_ld4(bottom_blob_data, v_offset);

        int lane = (gz - pad_head) % 4;

        afp v = v4[lane];

        res = v * v;
    }
    else
    {
        res = afp(0.f);
    }

    const int gi = gz * psc(outcstep) + gy * psc(outw) + gx;

    square_workspace_data[gi] = float(res);
}
