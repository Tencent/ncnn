// Copyright 2025 Futz12 <pchar.cn>
// SPDX-License-Identifier: BSD-3-Clause

#version 450

layout (constant_id = 0) const float eps = 0;

layout (binding = 0) writeonly buffer coeffs_blob { sfpvec4 coeffs_blob_data[]; };
layout (binding = 1) readonly buffer rms_blob     { vec4 rms_data[]; };

layout (push_constant) uniform parameter
{
    int num_groups_per_channel;
    int channels;
} p;

void main(){
    int gx=int(gl_GlobalInvocationID.x);
    int gy=int(gl_GlobalInvocationID.y);
    int gz=int(gl_GlobalInvocationID.z);
    if (gx>=1 || gy>=p.num_groups_per_channel || gz>=p.channels)
        return;

    int group_id = gz * p.num_groups_per_channel + gy;
    vec4 rms = rms_data[group_id];
    vec4 a = inversesqrt(rms + vec4(eps));
    buffer_st4(coeffs_blob_data, group_id, afpvec4(a));
}
