// Copyright 2025 Futz12 <pchar.cn>
// SPDX-License-Identifier: BSD-3-Clause

#version 450

layout (constant_id = 0) const float eps = 0;

layout (binding = 0) writeonly buffer coeffs_blob { sfpvec8 coeffs_blob_data[]; };
layout (binding = 1) readonly buffer mean_blob { mat2x4 mean_data[]; };
layout (binding = 2) readonly buffer var_blob { mat2x4 var_data[]; };

layout (push_constant) uniform parameter
{
    int num_groups_per_channel;
    int c;
} p;

void main()
{
    int gx = int(gl_GlobalInvocationID.x);
    int gy = int(gl_GlobalInvocationID.y);
    int gz = int(gl_GlobalInvocationID.z);
    if (gx >= 1 || gy >= p.num_groups_per_channel || gz >= p.c)
        return;

    int group_id = gz * p.num_groups_per_channel + gy;

    mat2x4 mean = mean_data[group_id];
    mat2x4 var = var_data[group_id];

    mat2x4 a;
    mat2x4 b;

    a[0] = 1.f / (sqrt(var[0] + eps));
    a[1] = 1.f / (sqrt(var[1] + eps));
    b[0] = -mean[0] * a[0];
    b[1] = -mean[1] * a[1];

    buffer_st8(coeffs_blob_data, group_id * 2, afpvec8(a));
    buffer_st8(coeffs_blob_data, group_id * 2 + 1, afpvec8(b));
}
